{
  "variables": {
    "artifactory_username": "{{ env `ARTIFACTORY_USERNAME` }}",
    "artifactory_password": "{{ env `ARTIFACTORY_PASSWORD` }}",
    "artifactory_url": "{{ env `ARTIFACTORY_URL` }}",
    "artifactory_apikey": "{{ env `ARTIFACTORY_APIKEY` }}",
    "box_timestamp_version": "{{ user `box_version` }}.{{timestamp}}",
    "box_final_name": "{{ user `box_name` }}-ci",
    "box_testing_name": "{{ user `box_name` }}-ci-staging"
  },
  "builders": [
    {
      "communicator": "ssh",
      "source_path": "{{ user `boxes_cache_dir` }}/{{ user `source_box_name` }}.box",
      "box_name": "{{ user `source_box_name` }}",
      "add_force": true,
      "add_clean": true,
      "provider": "parallels",
      "type": "vagrant"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "expect_disconnect": true,
      "script": "os-images/MacStadium/files/setup-base.sh",
      "start_retry_timeout": "10000s",
      "environment_vars": [
        "ARTIFACTORY_USERNAME={{ user `artifactory_username` }}",
        "ARTIFACTORY_PASSWORD={{ user `artifactory_password` }}"
      ]
    },
    {
      "type": "shell-local",
      "script": "os-images/MacStadium/files/prep-macos.sh",
      "environment_vars": [
        "SALT_PR={{ user `salt_pr` }}",
        "DISTRO_SLUG={{ user `distro_slug` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}",
        "PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/salt/bin:/usr/local/sbin"
      ]
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/sh -ex",
      "inline": [
        "# Install Pyenv Dependencies",
        "brew update",
        "# Install PyEnv",
        "brew install pyenv",
        "#",
        "# Hack for macOS Catalina Abort 6 issue",
        "# https://github.com/paramiko/paramiko/issues/1538#issuecomment-570508413",
        "OSX_VERS=$(sw_vers -productVersion | awk -F '.' '{print $2}')",
        "if [ \"$OSX_VERS\" -eq 15 ]; then",
        "    find /usr/local/Cellar -name libcrypto.dylib -print -exec ln -s {} /usr/local/lib/libcrypto.dylib \\;",
        "    find /usr/local/Cellar -name libssl.dylib -print -exec ln -s {} libssl.dylib \\;",
        "fi"
      ],
      "environment_vars": [
        "PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/salt/bin:/usr/local/sbin"
      ]
    },
    {
      "type": "shell",
      "script": "os-images/files/install-salt.sh",
      "environment_vars": [
        "SALT_VERSION={{ user `salt_provision_version` }}",
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}",
        "PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/salt/bin:/usr/local/sbin"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "file",
      "generated": true,
      "source": ".tmp/{{ user `distro_slug` }}",
      "destination": "{{ user `salt_provision_root_dir` }}/",
      "direction": "upload"
    },
    {
      "type": "shell",
      "script": "os-images/files/provision-system.sh",
      "environment_vars": [
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}",
        "SALT_STATE={{ user `state_name` }}",
        "PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/salt/bin:/usr/local/sbin"
      ],
      "pause_after": "5s",
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "script": "os-images/files/cleanup-salt.sh",
      "environment_vars": [
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}",
        "PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/salt/bin:/usr/local/sbin"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "script": "os-images/MacStadium/files/cleanup.sh",
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    }
  ],
  "post-processors": [
    {
      "type": "shell-local",
      "inline_shebang": "/bin/sh -ex",
      "inline": [
        "jfrog rt upload --url={{ user `artifactory_url` }} --apikey={{ user `artifactory_apikey` }} output-vagrant/package.box 'vagrant-boxes/macos/{{ user `box_testing_name` }}-v{{ user `box_timestamp_version` }}.box;box_name=macosx-{{ user `box_testing_name` }};box_provider=parallels;box_version={{ user `box_timestamp_version` }};promoted=false'"
      ],
      "environment_vars": [
        "JFROG_CLI_OFFER_CONFIG=false"
      ]
    },
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "custom_data": {
        "box_name": "macosx-{{ user `box_final_name` }}",
        "box_name_testing": "macosx-{{ user `box_testing_name` }}",
        "box_version": "{{ user `box_timestamp_version` }}",
        "box_provider": "parallels",
        "box_artifactory_repo": "vagrant-boxes/macos"
      }
    }
  ]
}
